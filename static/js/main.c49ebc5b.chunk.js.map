{"version":3,"sources":["components/Controls/Controls.module.css","app/App.module.css","components/CustomLoader/CustomLoader.module.css","assets/textures/tex1.jpg","assets/textures/tex2.jpg","assets/textures/tex3.jpg","assets/textures/tex4.jpg","assets/textures/tex5.jpg","assets/models/skate.glb","assets/textures/metalMap.png","assets/textures/normalMap.png","constants/types.ts","store/slices/settingsSlice.ts","constants/constants.ts","components/Controls/Controls.tsx","components/Skate/Skate.tsx","components/Scene.tsx","components/CustomLoader/CustomLoader.tsx","app/App.tsx","reportWebVitals.js","store/store.ts","index.tsx"],"names":["module","exports","controlsContainer","colorsContainer","texturesContainer","controlItem","bgColorContainer","header","mainTitle","mainContainer","footer","canvasContainer","tipBox","loaderContainer","loaderBody","pl","pl__ring","pl__worm1","pl__worm2","pl__worm3","worm1","worm2","worm3","__webpack_require__","p","TargetType","settingsSlice","createSlice","name","initialState","bgColor","deckColor","wheelsColor","deckTexture","target","reducers","changeBgColor","state","action","payload","changeDeckColor","changeWheelsColor","changeDeckTexture","changeTarget","actions","TEXTURES","tex1","tex2","tex3","tex4","tex5","COLORS","Controls","_useState","useState","_useState2","Object","slicedToArray","bgColorValue","setBgColorValue","dispatch","useDispatch","handleDeckColorClick","event","id","handleWheelsColorClick","handleDeckTextureClick","texture","react_default","a","createElement","className","styles","type","value","onInput","map","el","key","style","backgroundColor","onClick","backgroundImage","concat","slice","length","ROTATE_Y_90","Math","PI","Skate","_ref","skate","useLoader","GLTFLoader","skateModel","model","useRef","scene","threeTextures","TextureLoader","normalMap","normalMapTex","metalMap","metalMapTex","deck","nodes","wheels","newMaterial","THREE","metalnessMap","metalness","roughnessMap","roughness","useEffect","color","material","newWheelsColor","wrapS","wrapT","repeat","set","ref","object","scale","rotation","extend","OrbitControls","Scene","_useThree","useThree","camera","domElement","gl","position","y","lookAt","background","Fragment","args","maxDistance","minDistance","intensity","Skate_Skate","CustomLoader","viewBox","width","height","xmlns","x1","y1","x2","y2","offset","stopColor","fill","strokeWidth","strokeLinecap","r","cx","cy","stroke","d","strokeDasharray","strokeDashoffset","visibility","App","useSelector","Controls_Controls","react","fallback","CustomLoader_CustomLoader","react_three_fiber_esm","Scene_Scene","settings","href","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","settingsReducer","ReactDOM","createRoot","document","getElementById","render","es","App_App"],"mappings":"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","file":"static/js/main.c49ebc5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlsContainer\":\"Controls_controlsContainer__3Ognb\",\"colorsContainer\":\"Controls_colorsContainer__1KBcD\",\"texturesContainer\":\"Controls_texturesContainer__ooe9e\",\"controlItem\":\"Controls_controlItem__QcPl7\",\"bgColorContainer\":\"Controls_bgColorContainer__2M6OM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__J561a\",\"mainTitle\":\"App_mainTitle__1vcce\",\"mainContainer\":\"App_mainContainer__2FrEr\",\"footer\":\"App_footer__2clAm\",\"canvasContainer\":\"App_canvasContainer__V8FJK\",\"tipBox\":\"App_tipBox__35Bh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"CustomLoader_loaderContainer__3qbRF\",\"loaderBody\":\"CustomLoader_loaderBody__1oJFh\",\"pl\":\"CustomLoader_pl__7bQdw\",\"pl__ring\":\"CustomLoader_pl__ring__3bg43\",\"pl__worm1\":\"CustomLoader_pl__worm1__1RJbL\",\"pl__worm2\":\"CustomLoader_pl__worm2__Z96TO\",\"pl__worm3\":\"CustomLoader_pl__worm3__-CtKE\",\"worm1\":\"CustomLoader_worm1__3fbIb\",\"worm2\":\"CustomLoader_worm2__2jMin\",\"worm3\":\"CustomLoader_worm3__MkDqc\"};","module.exports = __webpack_public_path__ + \"static/media/tex1.20a3ea1c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tex2.b317e4bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tex3.7a086e97.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tex4.5ac24cad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tex5.aca09de5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skate.72b3bd60.glb\";","module.exports = __webpack_public_path__ + \"static/media/metalMap.e79c7632.png\";","module.exports = __webpack_public_path__ + \"static/media/normalMap.293d327e.png\";","import { settingsState } from '../store/slices/settingsSlice';\r\n\r\nexport type statePropsType = {\r\n  state: settingsState;\r\n};\r\n\r\nexport enum TargetType {\r\n  deckColor = 'deckColor',\r\n  texture = 'texture',\r\n  bgColor = 'bgColor',\r\n  wheelsColor = 'wheelsColor',\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport type { PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport interface settingsState {\r\n  bgColor: string,\r\n  deckColor: string,\r\n  wheelsColor: string,\r\n  deckTexture: string,\r\n  target: string\r\n}\r\n\r\nconst initialState: settingsState = {\r\n  bgColor: 'white',\r\n  deckColor: '',\r\n  wheelsColor: '',\r\n  deckTexture: '',\r\n  target: 'deckColor'\r\n}\r\n\r\nexport const settingsSlice = createSlice({\r\n  name: 'color',\r\n  initialState,\r\n  reducers: {\r\n    changeBgColor: (state, action: PayloadAction<string>) => {\r\n      state.bgColor = action.payload\r\n    },\r\n    changeDeckColor: (state, action: PayloadAction<string>) => {\r\n      state.deckColor = action.payload\r\n    },\r\n    changeWheelsColor: (state, action: PayloadAction<string>) => {\r\n      state.wheelsColor = action.payload\r\n    },\r\n    changeDeckTexture: (state, action: PayloadAction<string>) => {\r\n      state.deckTexture = action.payload;\r\n    },\r\n    changeTarget: (state, action: PayloadAction<string>) => {\r\n      state.target = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { changeBgColor, changeDeckColor, changeDeckTexture, changeTarget, changeWheelsColor } = settingsSlice.actions\r\n\r\nexport default settingsSlice.reducer","import tex1 from '../assets/textures/tex1.jpg';\r\nimport tex2 from '../assets/textures/tex2.jpg';\r\nimport tex3 from '../assets/textures/tex3.jpg';\r\nimport tex4 from '../assets/textures/tex4.jpg';\r\nimport tex5 from '../assets/textures/tex5.jpg';\r\n\r\nexport const TEXTURES = [tex1, tex2, tex3, tex4, tex5];\r\nexport const COLORS = ['crimson', 'cornsilk', 'dodgerblue', 'forestgreen', 'gold'];\r\nexport const TEX_NAME_START_INDEX = 14;\r\nexport const TEX_NAME_END_INDEX = 13;\r\n","import React, { SyntheticEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  changeBgColor,\r\n  changeDeckColor,\r\n  changeDeckTexture,\r\n  changeTarget,\r\n  changeWheelsColor,\r\n} from '../../store/slices/settingsSlice';\r\nimport styles from './Controls.module.css';\r\nimport { COLORS, TEXTURES, TEX_NAME_START_INDEX, TEX_NAME_END_INDEX } from '../../constants/constants';\r\nimport { TargetType } from '../../constants/types';\r\n\r\nexport const Controls = () => {\r\n  const [bgColorValue, setBgColorValue] = useState('#ffffff');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeckColorClick = (event: SyntheticEvent) => {\r\n    const target = event.target as HTMLDivElement;\r\n    dispatch(changeDeckColor(target.id));\r\n    dispatch(changeTarget(TargetType.deckColor));\r\n  };\r\n\r\n  const handleWheelsColorClick = (event: SyntheticEvent) => {\r\n    const target = event.target as HTMLDivElement;\r\n    dispatch(changeWheelsColor(target.id));\r\n    dispatch(changeTarget(TargetType.wheelsColor));\r\n  };\r\n\r\n  const handleDeckTextureClick = (event: SyntheticEvent) => {\r\n    const target = event.target as HTMLDivElement;\r\n    dispatch(changeDeckTexture(target.id));\r\n    dispatch(changeTarget(TargetType.texture));\r\n  };\r\n\r\n  const handleBgColorInput = (event: SyntheticEvent) => {\r\n    const target = event.target as HTMLInputElement;\r\n    dispatch(changeBgColor(target.value));\r\n    setBgColorValue(target.value);\r\n    dispatch(changeTarget(TargetType.bgColor));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.controlsContainer}>\r\n      <div>\r\n        <h5>Background color</h5>\r\n        <div className={styles.bgColorContainer}>\r\n          <input type='color' id='bgColorInput' value={bgColorValue} onInput={handleBgColorInput} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h5>Deck print color</h5>\r\n        <div className={styles.colorsContainer}>\r\n          {COLORS.map((el) => (\r\n            <div\r\n              key={el}\r\n              style={{ backgroundColor: el }}\r\n              className={styles.controlItem}\r\n              onClick={handleDeckColorClick}\r\n              id={el}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h5>Wheels color</h5>\r\n        <div className={styles.colorsContainer}>\r\n          {COLORS.map((el) => (\r\n            <div\r\n              key={el}\r\n              style={{ backgroundColor: el }}\r\n              className={styles.controlItem}\r\n              onClick={handleWheelsColorClick}\r\n              id={el}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h5>Deck print texture</h5>\r\n        <div className={styles.texturesContainer}>\r\n          {TEXTURES.map((el) => (\r\n            <div\r\n              key={el}\r\n              style={{ backgroundImage: `url(${el})` }}\r\n              className={styles.controlItem}\r\n              onClick={handleDeckTextureClick}\r\n              id={el.slice(el.length - TEX_NAME_START_INDEX, el.length - TEX_NAME_END_INDEX)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\nimport { ObjectMap, useLoader } from '@react-three/fiber';\r\nimport skateModel from '../../assets/models/skate.glb';\r\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { TextureLoader } from 'three';\r\nimport { statePropsType, TargetType } from '../../constants/types';\r\nimport { TEXTURES } from '../../constants/constants';\r\nimport metalMapTex from '../../assets/textures/metalMap.png';\r\nimport normalMapTex from '../../assets/textures/normalMap.png';\r\n\r\nconst ROTATE_Y_90 = Math.PI * 0.5;\r\n\r\nexport const Skate = ({ state }: statePropsType) => {\r\n  const { deckColor, deckTexture, target, wheelsColor } = state;\r\n  const skate = useLoader(GLTFLoader, skateModel) as GLTF & ObjectMap;\r\n  const model = useRef(skate.scene);\r\n  const threeTextures = useLoader(TextureLoader, TEXTURES);\r\n  const normalMap = useLoader(TextureLoader, normalMapTex);\r\n  const metalMap = useLoader(TextureLoader, metalMapTex);\r\n\r\n  const deck = skate.nodes['Rear_Truck_HP_bushing2_Wood_0'] as THREE.Mesh;\r\n  const wheels = skate.nodes['Rear_Truck_HP_bushing2_Wheels_0'] as THREE.Mesh;\r\n\r\n  const newMaterial = new THREE.MeshStandardMaterial({\r\n    normalMap: normalMap,\r\n    metalnessMap: metalMap,\r\n    metalness: 1,\r\n    roughnessMap: metalMap,\r\n    roughness: 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    switch (target) {\r\n      case TargetType.deckColor:\r\n        newMaterial.color = new THREE.Color(deckColor);\r\n        deck.material = newMaterial;\r\n        break;\r\n\r\n      case TargetType.wheelsColor:\r\n        const newWheelsColor = new THREE.MeshStandardMaterial({\r\n          color: new THREE.Color(wheelsColor),\r\n        });\r\n        wheels.material = newWheelsColor;\r\n        break;\r\n\r\n      case TargetType.texture:\r\n        const texture = threeTextures[+deckTexture - 1];\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set(10, 10);\r\n        newMaterial.map = texture;\r\n        deck.material = newMaterial;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [deckColor, deckTexture, target, wheelsColor]);\r\n\r\n  return <primitive ref={model} object={skate.scene} scale={[1, 1, 1]} rotation={[0, -ROTATE_Y_90, 0]} />;\r\n};\r\n","import * as THREE from 'three';\r\nimport React, { useEffect } from 'react';\r\nimport { extend, Object3DNode, useThree } from '@react-three/fiber';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { Skate } from './Skate/Skate';\r\nimport { statePropsType } from '../constants/types';\r\n\r\nextend({ OrbitControls });\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      orbitControls: Object3DNode<OrbitControls, typeof OrbitControls>;\r\n    }\r\n  }\r\n}\r\n\r\nexport const Scene = ({ state }: statePropsType) => {\r\n  const { bgColor } = state;\r\n  const target = new THREE.Vector3(0, 0, 0);\r\n  const {\r\n    scene,\r\n    camera,\r\n    gl: { domElement },\r\n  } = useThree();\r\n\r\n  useEffect(() => {\r\n    camera.position.y = -60;\r\n    camera.lookAt(target);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scene.background = new THREE.Color(bgColor);\r\n  }, [bgColor]);\r\n\r\n  return (\r\n    <>\r\n      <orbitControls args={[camera, domElement]} target={target} maxDistance={100} minDistance={20} />\r\n      <ambientLight intensity={0.3} />\r\n      <pointLight intensity={0.7} position={[0, -30, 0]} />\r\n      <directionalLight intensity={0.5} position={[0, 10, 0]} />\r\n      <Skate state={state} />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styles from './CustomLoader.module.css';\r\n\r\nexport const CustomLoader = () => {\r\n  return (\r\n    <div className={styles.loaderContainer}>\r\n      <div className={styles.loaderBody}>\r\n        <svg\r\n          className={styles.pl}\r\n          viewBox='0 0 176 160'\r\n          width='176px'\r\n          height='160px'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n        >\r\n          <defs>\r\n            <linearGradient id='pl-grad' x1='0' y1='0' x2='0' y2='1'>\r\n              <stop offset='0%' stopColor='hsl(33,90%,55%)' />\r\n              <stop offset='30%' stopColor='hsl(33,90%,55%)' />\r\n              <stop offset='100%' stopColor='hsl(3,90%,55%)' />\r\n            </linearGradient>\r\n          </defs>\r\n          <g fill='none' strokeWidth='16' strokeLinecap='round'>\r\n            <circle className='pl__ring' r='56' cx='88' cy='96' stroke='hsla(0,10%,10%,0.1)' />\r\n            <path\r\n              className={styles.pl__worm1}\r\n              d='M144,96A56,56,0,0,1,32,96'\r\n              stroke='url(#pl-grad)'\r\n              strokeDasharray='43.98 307.87'\r\n            />\r\n            <path\r\n              className={styles.pl__worm2}\r\n              d='M32,136V96s-.275-25.725,14-40'\r\n              stroke='hsl(33,90%,55%)'\r\n              strokeDasharray='0 40 0 44'\r\n              strokeDashoffset='0.001'\r\n              visibility='hidden'\r\n            />\r\n            <path\r\n              className={styles.pl__worm3}\r\n              d='M144,136V96s.275-25.725-14-40'\r\n              stroke='hsl(33,90%,55%)'\r\n              strokeDasharray='0 40 0 44'\r\n              strokeDashoffset='0.001'\r\n              visibility='hidden'\r\n            />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Suspense } from 'react';\r\nimport { Controls } from '../components/Controls/Controls';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport styles from './App.module.css';\r\nimport { Scene } from '../components/Scene';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store/store';\r\nimport { CustomLoader } from '../components/CustomLoader/CustomLoader';\r\n\r\nexport const App = (): JSX.Element => {\r\n  const state = useSelector((state: RootState) => state);\r\n\r\n  return (\r\n    <>\r\n      <header className={styles.header}>\r\n        <h2 className={styles.mainTitle}>Skateboard 3d configurator</h2>\r\n      </header>\r\n      <main className={styles.mainContainer}>\r\n        <Controls />\r\n        <div className={styles.canvasContainer}>\r\n          <Suspense fallback={<CustomLoader />}>\r\n            <Canvas>\r\n              <Scene state={state.settings} />\r\n            </Canvas>\r\n            <div className={styles.tipBox}>\r\n              <span>Scroll to zoom in</span>\r\n              <span>Click and drag to rotate</span>\r\n            </div>\r\n          </Suspense>\r\n        </div>\r\n      </main>\r\n      <footer className={styles.footer}>\r\n        <div>\r\n          <a href='https://github.com/Vadosdavos'>@Vadosdavos</a>, 2022\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport settingsReducer from './slices/settingsSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    settings: settingsReducer,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './app/App';\r\nimport './index.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from './store/store';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\r\nroot.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}