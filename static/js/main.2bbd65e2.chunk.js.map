{"version":3,"sources":["app/App.module.css","components/CustomLoader/CustomLoader.module.css","components/Controls/Controls.module.css","assets/textures/tex1.jpg","assets/textures/tex2.jpg","assets/textures/tex3.jpg","assets/textures/tex4.jpg","assets/textures/tex5.jpg","assets/models/skate.glb","constants/types.ts","store/slices/settingsSlice.ts","constants/constants.ts","components/Controls/Controls.tsx","components/Skate/Skate.tsx","components/Scene.tsx","components/CustomLoader/CustomLoader.tsx","app/App.tsx","reportWebVitals.js","store/store.ts","index.tsx"],"names":["module","exports","header","mainTitle","mainContainer","footer","canvasContainer","tipBox","loaderContainer","loaderBody","pl","pl__ring","pl__worm1","pl__worm2","pl__worm3","worm1","worm2","worm3","controlsContainer","colorsContainer","texturesContainer","controlItem","__webpack_require__","p","TargetType","settingsSlice","createSlice","name","initialState","bgColor","deckColor","deckTexture","target","reducers","changeBgColor","state","action","payload","changeDeckColor","changeDeckTexture","changeTarget","actions","TEXTURES","tex1","tex2","tex3","tex4","tex5","COLORS","Controls","_useState","useState","_useState2","Object","slicedToArray","bgColorValue","setBgColorValue","dispatch","useDispatch","handleDeckColorClick","event","id","handleDeckTextureClick","texture","react_default","a","createElement","className","styles","type","value","onInput","map","el","key","style","backgroundColor","onClick","backgroundImage","concat","slice","length","ROTATE_Y_90","Math","PI","Skate","_ref","skate","useLoader","GLTFLoader","skateModel","model","useRef","scene","threeTextures","TextureLoader","deck","nodes","useEffect","newColor","THREE","color","material","wrapS","wrapT","repeat","set","newPrint","ref","object","scale","rotation","extend","OrbitControls","Scene","_useThree","useThree","camera","domElement","gl","position","y","lookAt","background","Fragment","args","maxDistance","minDistance","intensity","Skate_Skate","CustomLoader","viewBox","width","height","xmlns","x1","y1","x2","y2","offset","stopColor","fill","strokeWidth","strokeLinecap","r","cx","cy","stroke","d","strokeDasharray","strokeDashoffset","visibility","App","useSelector","settings","Controls_Controls","react","fallback","CustomLoader_CustomLoader","react_three_fiber_esm","Scene_Scene","href","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","settingsReducer","ReactDOM","createRoot","document","getElementById","render","es","App_App"],"mappings":"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","file":"static/js/main.2bbd65e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__J561a\",\"mainTitle\":\"App_mainTitle__1vcce\",\"mainContainer\":\"App_mainContainer__2FrEr\",\"footer\":\"App_footer__2clAm\",\"canvasContainer\":\"App_canvasContainer__V8FJK\",\"tipBox\":\"App_tipBox__35Bh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"CustomLoader_loaderContainer__3qbRF\",\"loaderBody\":\"CustomLoader_loaderBody__1oJFh\",\"pl\":\"CustomLoader_pl__7bQdw\",\"pl__ring\":\"CustomLoader_pl__ring__3bg43\",\"pl__worm1\":\"CustomLoader_pl__worm1__1RJbL\",\"pl__worm2\":\"CustomLoader_pl__worm2__Z96TO\",\"pl__worm3\":\"CustomLoader_pl__worm3__-CtKE\",\"worm1\":\"CustomLoader_worm1__3fbIb\",\"worm2\":\"CustomLoader_worm2__2jMin\",\"worm3\":\"CustomLoader_worm3__MkDqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlsContainer\":\"Controls_controlsContainer__3Ognb\",\"colorsContainer\":\"Controls_colorsContainer__1KBcD\",\"texturesContainer\":\"Controls_texturesContainer__ooe9e\",\"controlItem\":\"Controls_controlItem__QcPl7\"};","module.exports = __webpack_public_path__ + \"static/media/tex1.20a3ea1c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tex2.b317e4bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tex3.7a086e97.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tex4.5ac24cad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tex5.aca09de5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skate.72b3bd60.glb\";","import { settingsState } from '../store/slices/settingsSlice';\r\n\r\nexport type statePropsType = {\r\n  state: settingsState;\r\n};\r\n\r\nexport enum TargetType {\r\n  deckColor = 'deckColor',\r\n  texture = 'texture',\r\n  bgColor = 'bgColor',\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport type { PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport interface settingsState {\r\n  bgColor: string,\r\n  deckColor: string,\r\n  deckTexture: string,\r\n  target: string\r\n}\r\n\r\nconst initialState: settingsState = {\r\n  bgColor: 'white',\r\n  deckColor: '',\r\n  deckTexture: '',\r\n  target: 'deckColor'\r\n}\r\n\r\nexport const settingsSlice = createSlice({\r\n  name: 'color',\r\n  initialState,\r\n  reducers: {\r\n    changeBgColor: (state, action: PayloadAction<string>) => {\r\n      state.bgColor = action.payload\r\n    },\r\n    changeDeckColor: (state, action: PayloadAction<string>) => {\r\n      state.deckColor = action.payload\r\n    },\r\n    changeDeckTexture: (state, action: PayloadAction<string>) => {\r\n      state.deckTexture = action.payload;\r\n    },\r\n    changeTarget: (state, action: PayloadAction<string>) => {\r\n      state.target = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { changeBgColor, changeDeckColor, changeDeckTexture, changeTarget } = settingsSlice.actions\r\n\r\nexport default settingsSlice.reducer","import tex1 from '../assets/textures/tex1.jpg';\r\nimport tex2 from '../assets/textures/tex2.jpg';\r\nimport tex3 from '../assets/textures/tex3.jpg';\r\nimport tex4 from '../assets/textures/tex4.jpg';\r\nimport tex5 from '../assets/textures/tex5.jpg';\r\n\r\nexport const TEXTURES = [tex1, tex2, tex3, tex4, tex5];\r\nexport const COLORS = ['crimson', 'cornsilk', 'dodgerblue', 'forestgreen', 'gold'];\r\nexport const TEX_NAME_START_INDEX = 14;\r\nexport const TEX_NAME_END_INDEX = 13;\r\n","import React, { SyntheticEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeBgColor, changeDeckColor, changeDeckTexture, changeTarget } from '../../store/slices/settingsSlice';\r\nimport styles from './Controls.module.css';\r\nimport { COLORS, TEXTURES, TEX_NAME_START_INDEX, TEX_NAME_END_INDEX } from '../../constants/constants';\r\nimport { TargetType } from '../../constants/types';\r\n\r\nexport const Controls = () => {\r\n  const [bgColorValue, setBgColorValue] = useState('#ffffff');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeckColorClick = (event: SyntheticEvent) => {\r\n    const target = event.target as HTMLDivElement;\r\n    dispatch(changeDeckColor(target.id));\r\n    dispatch(changeTarget(TargetType.deckColor));\r\n  };\r\n\r\n  const handleDeckTextureClick = (event: SyntheticEvent) => {\r\n    const target = event.target as HTMLDivElement;\r\n    dispatch(changeDeckTexture(target.id));\r\n    dispatch(changeTarget(TargetType.texture));\r\n  };\r\n\r\n  const handleBgColorInput = (event: SyntheticEvent) => {\r\n    const target = event.target as HTMLInputElement;\r\n    dispatch(changeBgColor(target.value));\r\n    setBgColorValue(target.value);\r\n    dispatch(changeTarget(TargetType.bgColor));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.controlsContainer}>\r\n      <h5>Background color</h5>\r\n      <input type='color' id='bgColorInput' value={bgColorValue} onInput={handleBgColorInput} />\r\n      <h5>Deck print color</h5>\r\n      <div className={styles.colorsContainer}>\r\n        {COLORS.map((el) => (\r\n          <div\r\n            key={el}\r\n            style={{ backgroundColor: el }}\r\n            className={styles.controlItem}\r\n            onClick={handleDeckColorClick}\r\n            id={el}\r\n          />\r\n        ))}\r\n      </div>\r\n      <h5>Deck print texture</h5>\r\n      <div className={styles.texturesContainer}>\r\n        {TEXTURES.map((el) => (\r\n          <div\r\n            key={el}\r\n            style={{ backgroundImage: `url(${el})` }}\r\n            className={styles.controlItem}\r\n            onClick={handleDeckTextureClick}\r\n            id={el.slice(el.length - TEX_NAME_START_INDEX, el.length - TEX_NAME_END_INDEX)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useEffect, useMemo } from 'react';\r\nimport * as THREE from 'three';\r\nimport { ObjectMap, useLoader } from '@react-three/fiber';\r\nimport skateModel from '../../assets/models/skate.glb';\r\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { TextureLoader } from 'three';\r\nimport { statePropsType, TargetType } from '../../constants/types';\r\nimport { TEXTURES } from '../../constants/constants';\r\n\r\nconst ROTATE_Y_90 = Math.PI * 0.5;\r\n\r\nexport const Skate = ({ state }: statePropsType) => {\r\n  const { deckColor, deckTexture, target } = state;\r\n  const skate = useLoader(GLTFLoader, skateModel) as GLTF & ObjectMap;\r\n  const model = useRef(skate.scene);\r\n  const threeTextures = useLoader(TextureLoader, TEXTURES);\r\n\r\n  const deck = skate.nodes['Rear_Truck_HP_bushing2_Wood_0'] as THREE.Mesh;\r\n\r\n  useEffect(() => {\r\n    switch (target) {\r\n      case TargetType.deckColor:\r\n        const newColor = new THREE.MeshStandardMaterial({\r\n          color: new THREE.Color(deckColor),\r\n        });\r\n        deck.material = newColor;\r\n        break;\r\n\r\n      case TargetType.texture:\r\n        if (deckTexture) {\r\n          const texture = threeTextures[+deckTexture - 1];\r\n          texture.wrapS = THREE.RepeatWrapping;\r\n          texture.wrapT = THREE.RepeatWrapping;\r\n          texture.repeat.set(3, 3);\r\n          const newPrint = new THREE.MeshStandardMaterial({ map: texture });\r\n          deck.material = newPrint;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [deckColor, deckTexture, target]);\r\n\r\n  // useEffect(() => {\r\n  //   if (target === TargetType.texture) {\r\n  //     console.log(deckTexture);\r\n  //   }\r\n  //   texture.wrapS = THREE.RepeatWrapping;\r\n  //   texture.wrapT = THREE.RepeatWrapping;\r\n  //   texture.repeat.set(3, 3);\r\n  //   const newPrint = new THREE.MeshStandardMaterial({ map: texture });\r\n  //   deck.material = newPrint;\r\n  // }, [deckTexture]);\r\n\r\n  return <primitive ref={model} object={skate.scene} scale={[1, 1, 1]} rotation={[0, -ROTATE_Y_90, 0]} />;\r\n};\r\n","import * as THREE from 'three';\r\nimport React, { useEffect } from 'react';\r\nimport { extend, Object3DNode, useThree } from '@react-three/fiber';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { Skate } from './Skate/Skate';\r\nimport { statePropsType } from '../constants/types';\r\n\r\nextend({ OrbitControls });\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      orbitControls: Object3DNode<OrbitControls, typeof OrbitControls>;\r\n    }\r\n  }\r\n}\r\n\r\nexport const Scene = ({ state }: statePropsType) => {\r\n  const { bgColor } = state;\r\n  const target = new THREE.Vector3(0, 0, 0);\r\n  const {\r\n    scene,\r\n    camera,\r\n    gl: { domElement },\r\n  } = useThree();\r\n\r\n  useEffect(() => {\r\n    camera.position.y = -60;\r\n    camera.lookAt(target);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scene.background = new THREE.Color(bgColor);\r\n  }, [bgColor]);\r\n\r\n  return (\r\n    <>\r\n      <orbitControls args={[camera, domElement]} target={target} maxDistance={100} minDistance={20} />\r\n      <hemisphereLight intensity={0.8} position={[0, 10, 0]} />\r\n      <directionalLight intensity={0.5} position={[0, -10, 0]} />\r\n      <directionalLight intensity={1} position={[0, 10, 0]} />\r\n      <Skate state={state} />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styles from './CustomLoader.module.css';\r\n\r\nexport const CustomLoader = () => {\r\n  return (\r\n    <div className={styles.loaderContainer}>\r\n      <div className={styles.loaderBody}>\r\n        <svg\r\n          className={styles.pl}\r\n          viewBox='0 0 176 160'\r\n          width='176px'\r\n          height='160px'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n        >\r\n          <defs>\r\n            <linearGradient id='pl-grad' x1='0' y1='0' x2='0' y2='1'>\r\n              <stop offset='0%' stopColor='hsl(33,90%,55%)' />\r\n              <stop offset='30%' stopColor='hsl(33,90%,55%)' />\r\n              <stop offset='100%' stopColor='hsl(3,90%,55%)' />\r\n            </linearGradient>\r\n          </defs>\r\n          <g fill='none' strokeWidth='16' strokeLinecap='round'>\r\n            <circle className='pl__ring' r='56' cx='88' cy='96' stroke='hsla(0,10%,10%,0.1)' />\r\n            <path\r\n              className={styles.pl__worm1}\r\n              d='M144,96A56,56,0,0,1,32,96'\r\n              stroke='url(#pl-grad)'\r\n              strokeDasharray='43.98 307.87'\r\n            />\r\n            <path\r\n              className={styles.pl__worm2}\r\n              d='M32,136V96s-.275-25.725,14-40'\r\n              stroke='hsl(33,90%,55%)'\r\n              strokeDasharray='0 40 0 44'\r\n              strokeDashoffset='0.001'\r\n              visibility='hidden'\r\n            />\r\n            <path\r\n              className={styles.pl__worm3}\r\n              d='M144,136V96s.275-25.725-14-40'\r\n              stroke='hsl(33,90%,55%)'\r\n              strokeDasharray='0 40 0 44'\r\n              strokeDashoffset='0.001'\r\n              visibility='hidden'\r\n            />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Suspense } from 'react';\r\nimport { Controls } from '../components/Controls/Controls';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport styles from './App.module.css';\r\nimport { Scene } from '../components/Scene';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store/store';\r\nimport { CustomLoader } from '../components/CustomLoader/CustomLoader';\r\n\r\nexport const App = (): JSX.Element => {\r\n  const bgColor = useSelector((state: RootState) => state.settings.bgColor);\r\n  const deckColor = useSelector((state: RootState) => state.settings.deckColor);\r\n  const state = useSelector((state: RootState) => state);\r\n\r\n  return (\r\n    <>\r\n      <header className={styles.header}>\r\n        <h2 className={styles.mainTitle}>Skateboard 3d configurator</h2>\r\n      </header>\r\n      <main className={styles.mainContainer}>\r\n        <Controls />\r\n        <div className={styles.canvasContainer}>\r\n          <Suspense fallback={<CustomLoader />}>\r\n            <Canvas>\r\n              <Scene state={state.settings} />\r\n            </Canvas>\r\n            <div className={styles.tipBox}>\r\n              <span>Scroll to zoom in</span>\r\n              <span>Click and drag to rotate</span>\r\n            </div>\r\n          </Suspense>\r\n        </div>\r\n      </main>\r\n      <footer className={styles.footer}>\r\n        <div>\r\n          <a href='https://github.com/Vadosdavos'>@Vadosdavos</a>, 2022\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport settingsReducer from './slices/settingsSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    settings: settingsReducer,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './app/App';\r\nimport './index.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from './store/store';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\r\nroot.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}