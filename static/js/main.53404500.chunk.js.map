{"version":3,"sources":["components/RenderingItem/tex.jpg","components/3dmodel/scene.glb","components/RenderingItem/RenderingItem.js","components/3dmodel/3dmodel.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","RenderingItem","_ref","type","geometries","cube","THREE","sphere","tetrahedron","refContainer","useRef","useEffect","container","current","contW","clientWidth","contH","clientHeight","scene","camera","renderer","antialias","alpha","setSize","appendChild","domElement","texture","load","tex","material","map","shape","add","position","set","lookAt","req","animate","requestAnimationFrame","rotation","x","y","render","cancelAnimationFrame","removeChild","react_default","a","createElement","ref","className","Model","target","initialCameraPosition","Math","sin","PI","cos","controls","OrbitControls","autoRotate","GLTFLoader","modelPath","gltf","undefined","error","console","frame","rotSpeed","sqrt","pow","z","update","dispose","App","_useState","useState","_useState2","Object","slicedToArray","setShape","handleInputChange","useCallback","event","value","Fragment","name","id","onChange","htmlFor","RenderingItem_RenderingItem","_3dmodel_Model","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","App_App"],"mappings":"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","file":"static/js/main.53404500.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tex.69be68ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene.597f9076.glb\";","import * as THREE from 'three';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport tex from './tex.jpg';\r\n\r\nexport const RenderingItem = ({ type }) => {\r\n  const geometries = {\r\n    cube: new THREE.BoxGeometry(1, 1, 1),\r\n    sphere: new THREE.SphereGeometry(1, 32, 16),\r\n    tetrahedron: new THREE.TetrahedronGeometry(1, 0),\r\n  };\r\n  const refContainer = useRef();\r\n\r\n  useEffect(() => {\r\n    const { current: container } = refContainer;\r\n    const contW = container.clientWidth;\r\n    const contH = container.clientHeight;\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(45, contW / contH, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      alpha: true,\r\n    });\r\n    renderer.setSize(container.clientWidth, container.clientHeight);\r\n    container.appendChild(renderer.domElement);\r\n\r\n    const texture = new THREE.TextureLoader().load(tex);\r\n\r\n    const material = new THREE.MeshBasicMaterial({ map: texture });\r\n    const shape = new THREE.Mesh(geometries[type], material);\r\n    scene.add(shape);\r\n\r\n    camera.position.set(0, 0, 5);\r\n    camera.lookAt(0, 0, 0);\r\n\r\n    let req = null;\r\n    const animate = () => {\r\n      req = requestAnimationFrame(animate);\r\n\r\n      shape.rotation.x += 0.01;\r\n      shape.rotation.y += 0.01;\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n    return () => {\r\n      cancelAnimationFrame(req);\r\n      container.removeChild(renderer.domElement);\r\n    };\r\n  }, [type]);\r\n\r\n  return <div ref={refContainer} className='container' />;\r\n};\r\n","import * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport modelPath from './scene.glb';\r\n\r\nfunction easeOutCirc(x) {\r\n  return Math.sqrt(1 - Math.pow(x - 1, 4));\r\n}\r\n\r\nexport const Model = () => {\r\n  const refContainer = useRef();\r\n\r\n  useEffect(() => {\r\n    const { current: container } = refContainer;\r\n\r\n    const renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      alpha: true,\r\n    });\r\n    renderer.setSize(container.clientWidth, container.clientHeight);\r\n    container.appendChild(renderer.domElement);\r\n\r\n    const scene = new THREE.Scene();\r\n    const scale = 5.6;\r\n    const camera = new THREE.OrthographicCamera(-scale, scale, scale, -scale, 0.01, 50000);\r\n    const target = new THREE.Vector3(-0.5, 1.2, 0);\r\n    const initialCameraPosition = new THREE.Vector3(20 * Math.sin(0.2 * Math.PI), 10, 20 * Math.cos(0.2 * Math.PI));\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.autoRotate = true;\r\n    controls.target = target;\r\n\r\n    const loader = new GLTFLoader();\r\n\r\n    loader.load(\r\n      modelPath,\r\n      function(gltf) {\r\n        scene.add(gltf.scene);\r\n      },\r\n      undefined,\r\n      function(error) {\r\n        console.error(error);\r\n      }\r\n    );\r\n\r\n    let req = null;\r\n    let frame = 0;\r\n    const animate = () => {\r\n      req = requestAnimationFrame(animate);\r\n\r\n      frame = frame <= 100 ? frame + 1 : frame;\r\n\r\n      if (frame <= 100) {\r\n        const p = initialCameraPosition;\r\n        const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20;\r\n\r\n        camera.position.y = 10;\r\n        camera.position.x = p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed);\r\n        camera.position.z = p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed);\r\n        camera.lookAt(target);\r\n      } else {\r\n        controls.update();\r\n      }\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(req);\r\n      renderer.dispose();\r\n      container.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={refContainer} className='container' />;\r\n};\r\n","import './App.css';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { RenderingItem } from './components/RenderingItem/RenderingItem';\r\nimport { Model } from './components/3dmodel/3dmodel';\r\n\r\nexport const App = () => {\r\n  const [shape, setShape] = useState('cube');\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      const target = event.target;\r\n      setShape(target.value);\r\n    },\r\n    [shape, setShape]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <header className='header'>\r\n        <div className='button'>\r\n          <input type='radio' name='shapeType' id='cube' onChange={handleInputChange} value='cube'></input>\r\n          <label className='labelBtn' htmlFor='cube'>\r\n            Cube\r\n          </label>\r\n        </div>\r\n        <div className='button'>\r\n          <input type='radio' name='shapeType' id='sphere' onChange={handleInputChange} value='sphere'></input>\r\n          <label className='labelBtn' htmlFor='sphere'>\r\n            Sphere\r\n          </label>\r\n        </div>\r\n        <div className='button'>\r\n          <input\r\n            type='radio'\r\n            name='shapeType'\r\n            id='tetrahedron'\r\n            onChange={handleInputChange}\r\n            value='tetrahedron'\r\n          ></input>\r\n          <label className='labelBtn' htmlFor='tetrahedron'>\r\n            Tetrahedron\r\n          </label>\r\n        </div>\r\n      </header>\r\n      <RenderingItem type={shape} />\r\n      <Model />\r\n    </>\r\n  );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <App />\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}