{"version":3,"sources":["components/RenderingItem/RenderingItem.js","components/Line/Line.js","components/3dmodel/3dmodel.js","App.js","reportWebVitals.js","index.js"],"names":["RenderingItem","_ref","type","geometries","cube","THREE","sphere","tetrahedron","refContainer","useRef","useEffect","container","current","contW","clientWidth","contH","clientHeight","scene","camera","renderer","antialias","alpha","setSize","appendChild","domElement","material","color","shape","add","position","set","lookAt","req","animate","requestAnimationFrame","rotation","x","y","render","cancelAnimationFrame","removeChild","react_default","a","createElement","ref","className","Line","points","push","geometry","setFromPoints","line","Model","target","initialCameraPosition","Math","sin","PI","cos","controls","OrbitControls","autoRotate","GLTFLoader","load","gltf","undefined","error","console","frame","p","rotSpeed","sqrt","pow","z","update","dispose","App","_useState","useState","_useState2","Object","slicedToArray","setShape","handleInputChange","useCallback","event","value","Fragment","name","onChange","RenderingItem_RenderingItem","Line_Line","_3dmodel_Model","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","App_App"],"mappings":"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","file":"static/js/main.6a4623fe.chunk.js","sourcesContent":["import * as THREE from 'three';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nexport const RenderingItem = ({ type }) => {\r\n  const geometries = {\r\n    cube: new THREE.BoxGeometry(1, 1, 1),\r\n    sphere: new THREE.SphereGeometry(1, 32, 16),\r\n    tetrahedron: new THREE.TetrahedronGeometry(1, 0),\r\n  };\r\n  const refContainer = useRef();\r\n\r\n  useEffect(() => {\r\n    const { current: container } = refContainer;\r\n    const contW = container.clientWidth;\r\n    const contH = container.clientHeight;\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(45, contW / contH, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      alpha: true,\r\n    });\r\n    renderer.setSize(container.clientWidth, container.clientHeight);\r\n    container.appendChild(renderer.domElement);\r\n\r\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n    const shape = new THREE.Mesh(geometries[type], material);\r\n    scene.add(shape);\r\n\r\n    camera.position.set(0, 0, 5);\r\n    camera.lookAt(0, 0, 0);\r\n\r\n    let req = null;\r\n    const animate = () => {\r\n      req = requestAnimationFrame(animate);\r\n\r\n      shape.rotation.x += 0.01;\r\n      shape.rotation.y += 0.01;\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n    return () => {\r\n      cancelAnimationFrame(req);\r\n      container.removeChild(renderer.domElement);\r\n    };\r\n  }, [type]);\r\n\r\n  return <div ref={refContainer}  className='container' />;\r\n};\r\n","import * as THREE from 'three';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nexport const Line = () => {\r\n  const refContainer = useRef();\r\n\r\n  useEffect(() => {\r\n    const { current: container } = refContainer;\r\n    const contW = container.clientWidth;\r\n    const contH = container.clientHeight;\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(45, contW / contH, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      alpha: true,\r\n    });\r\n    renderer.setSize(container.clientWidth, container.clientHeight);\r\n    container.appendChild(renderer.domElement);\r\n\r\n    const material = new THREE.LineBasicMaterial({ color: 0x000000 });\r\n    const points = [];\r\n    points.push(new THREE.Vector3(-2, 0, 0));\r\n    points.push(new THREE.Vector3(0, 2, 0));\r\n    points.push(new THREE.Vector3(2, 0, 0));\r\n    points.push(new THREE.Vector3(-2, 0, 0));\r\n\r\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n    const line = new THREE.Line(geometry, material);\r\n    scene.add(line);\r\n\r\n    camera.position.set(0, 0, 10);\r\n    camera.lookAt(0, 0, 0);\r\n\r\n    let req = null;\r\n    const animate = () => {\r\n      req = requestAnimationFrame(animate);\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n    return () => {\r\n      cancelAnimationFrame(req);\r\n      container.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={refContainer} className='container' />;\r\n};\r\n","import * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nfunction easeOutCirc(x) {\r\n  return Math.sqrt(1 - Math.pow(x - 1, 4));\r\n}\r\n\r\nexport const Model = () => {\r\n  const refContainer = useRef();\r\n\r\n  useEffect(() => {\r\n    const { current: container } = refContainer;\r\n\r\n    const renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      alpha: true,\r\n    });\r\n    renderer.setSize(container.clientWidth, container.clientHeight);\r\n    container.appendChild(renderer.domElement);\r\n\r\n    const scene = new THREE.Scene();\r\n    const scale = 5.6;\r\n    const camera = new THREE.OrthographicCamera(-scale, scale, scale, -scale, 0.01, 50000);\r\n    const target = new THREE.Vector3(-0.5, 1.2, 0);\r\n    const initialCameraPosition = new THREE.Vector3(20 * Math.sin(0.2 * Math.PI), 10, 20 * Math.cos(0.2 * Math.PI));\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.autoRotate = true;\r\n    controls.target = target;\r\n\r\n    const loader = new GLTFLoader();\r\n\r\n    loader.load(\r\n      '/scene.glb',\r\n      function(gltf) {\r\n        scene.add(gltf.scene);\r\n      },\r\n      undefined,\r\n      function(error) {\r\n        console.error(error);\r\n      }\r\n    );\r\n\r\n    let req = null;\r\n    let frame = 0;\r\n    const animate = () => {\r\n      req = requestAnimationFrame(animate);\r\n\r\n      frame = frame <= 100 ? frame + 1 : frame;\r\n\r\n      if (frame <= 100) {\r\n        const p = initialCameraPosition;\r\n        const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20;\r\n\r\n        camera.position.y = 10;\r\n        camera.position.x = p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed);\r\n        camera.position.z = p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed);\r\n        camera.lookAt(target);\r\n      } else {\r\n        controls.update();\r\n      }\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(req);\r\n      renderer.dispose();\r\n      container.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={refContainer} className='container' />;\r\n};\r\n","import './App.css';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { RenderingItem } from './components/RenderingItem/RenderingItem';\r\nimport { Line } from './components/Line/Line';\r\nimport { Model } from './components/3dmodel/3dmodel';\r\n\r\nexport const App = () => {\r\n  const [shape, setShape] = useState('cube');\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      const target = event.target;\r\n      setShape(target.value);\r\n    },\r\n    [shape, setShape]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className='app'>\r\n        <label>\r\n          <input type='radio' name='shapeType' onChange={handleInputChange} value='cube'></input>Cube\r\n        </label>\r\n        <label>\r\n          <input type='radio' name='shapeType' onChange={handleInputChange} value='sphere'></input>Sphere\r\n        </label>\r\n        <label>\r\n          <input type='radio' name='shapeType' onChange={handleInputChange} value='tetrahedron'></input>Tetrahedron\r\n        </label>\r\n      </div>\r\n      <RenderingItem type={shape} />\r\n      <Line />\r\n      <Model />\r\n    </>\r\n  );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <App />\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}